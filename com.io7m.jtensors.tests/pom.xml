<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.io7m.jtensors</groupId>
    <artifactId>com.io7m.jtensors</artifactId>
    <version>8.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>com.io7m.jtensors.tests</artifactId>
  <packaging>jar</packaging>

  <name>com.io7m.jtensors.tests</name>
  <description>Vector/matrix math package (Test suite)</description>
  <url>http://io7m.github.io/jtensors/</url>

  <scm>
    <url>${project.parent.scm.url}</url>
    <connection>${project.parent.scm.connection}</connection>
    <developerConnection>${project.parent.scm.developerConnection}</developerConnection>
  </scm>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jtensors.core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jtensors.generators</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Generate sources -->
      <plugin>
        <groupId>com.webguys</groupId>
        <artifactId>string-template-maven-plugin</artifactId>
        <executions>

          <!-- Parameterized vector types -->
          <!-- Double -->
          <execution>
            <id>generate-P4D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors4DTest.java</target>
                  <properties>
                    <className>PVectors4DTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector4D</vectorType>
                    <vectorComponentType>double</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable4Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable4DType</vectorReadable4Type>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3DType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2DType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector4DGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors4D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P3D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors3DTest.java</target>
                  <properties>
                    <className>PVectors3DTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector3D</vectorType>
                    <vectorComponentType>double</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3DType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2DType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector3DGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors3D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P2D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors2DTest.java</target>
                  <properties>
                    <className>PVectors2DTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector2D</vectorType>
                    <vectorComponentType>double</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2DType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector2DGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors2D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Float -->
          <execution>
            <id>generate-P4F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors4FTest.java</target>
                  <properties>
                    <className>PVectors4FTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector4F</vectorType>
                    <vectorComponentType>float</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable4Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable4FType</vectorReadable4Type>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3FType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2FType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector4FGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors4F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P3F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors3FTest.java</target>
                  <properties>
                    <className>PVectors3FTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector3F</vectorType>
                    <vectorComponentType>float</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3FType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2FType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector3FGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors3F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P2F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors2FTest.java</target>
                  <properties>
                    <className>PVectors2FTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector2F</vectorType>
                    <vectorComponentType>float</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2FType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector2FGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors2F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Long -->
          <execution>
            <id>generate-P4L</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors4LTest.java</target>
                  <properties>
                    <className>PVectors4LTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector4L</vectorType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable4Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable4LType</vectorReadable4Type>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3LType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2LType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector4LGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors4L</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestLOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P3L</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors3LTest.java</target>
                  <properties>
                    <className>PVectors3LTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector3L</vectorType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3LType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2LType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector3LGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors3L</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestLOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P2L</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors2LTest.java</target>
                  <properties>
                    <className>PVectors2LTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector2L</vectorType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2LType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector2LGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors2L</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestLOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Int -->
          <execution>
            <id>generate-P4I</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors4ITest.java</target>
                  <properties>
                    <className>PVectors4ITest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector4I</vectorType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable4Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable4IType</vectorReadable4Type>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3IType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2IType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector4IGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors4I</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestIOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P3I</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors3ITest.java</target>
                  <properties>
                    <className>PVectors3ITest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector3I</vectorType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3IType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2IType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector3IGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors3I</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestIOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P2I</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors2ITest.java</target>
                  <properties>
                    <className>PVectors2ITest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector2I</vectorType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2IType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector2IGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors2I</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestIOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Parameterized matrix types -->
          <!-- Double -->
          <execution>
            <id>generate-M4x4D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PMatrix4x4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/matrices/PMatrix4x4DTest.java</target>
                  <properties>
                    <className>PMatrix4x4DTest</className>
                    <matrixType>com.io7m.jtensors.core.parameterized.matrices.PMatrix4x4D</matrixType>
                    <matrixComponentType>double</matrixComponentType>
                    <scalarRealType>double</scalarRealType>
                    <opClass>com.io7m.jtensors.core.parameterized.matrices.PMatrices4x4D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Check style -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>

      <!-- Add generated test sources to compilation -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-test-sources/string-template</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
